% \iffalse meta-comment
% !TEX program  = pdfLaTeX
%<*internal> 
\iffalse
%</internal> 
%<*readme> 
----------------------------------------------------------------
##### ccool --- A tool for encoding mathematical notation
- Source repository: https://github.com/rogard/ccool
- Released under the LaTeX Project Public License v1.3c or later
- See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

%</readme> 
%<*internal> 
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
\expandafter\begingroup
\fi
%</internal> 
%<*install> 
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------------------
ccool --- A tool for encoding mathematical notation
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2020 by Erwann Rogard

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Erwann Rogard.

This work consists of the file ccool.dtx and the derived files:
ccool.sty, ccool.pdf, ...

\endpostamble
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install> 
%<install> \endbatchfile
%<*internal> 
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\generate{
  \file{README.md}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
\expandafter\endbatchfile
\else
\expandafter\endgroup
\fi
%</internal> 
%<package> \RequirePackage{etoolbox}
%<package> \RequirePackage{l3keys2e}
%<package> \RequirePackage{xparse}[2019/05/28]
%<package> \ProvidesExplPackage
%<package> {ccool}                                                                                      % Package name
%<package> {2020/04/10}                                                                                 % Release date
%<package> {1.6}                                                                                        % Release version
%<package> {A tool for encoding mathematical notation}                                                  % Description
% 
%<*driver> 
\documentclass[full]{l3doc}
\usepackage{amsmath, amssymb}
\usepackage{babel}
\usepackage{bookmark}
\usepackage{fancyvrb}
\usepackage[T1]{fontenc}% \char`[
\usepackage{fvextra}
\usepackage{ccool}
\usepackage{pdfpages}
\usepackage{tabto}
\usepackage{tcolorbox}
\tcbuselibrary{listings, breakable}
\ExplSyntaxOn
\tl_gset:Nn \partname {Part}
\ExplSyntaxOff
\EnableCrossrefs
\CodelineIndex
\RecordChanges
% ^^A\AtEndDocument { \PrintChanges \PrintIndex }
\ExplSyntaxOn
\providecommand\docargnoval{\c_novalue_tl}
\providecommand\docassign[2]{#1~$\leftarrow$~#2}
\providecommand\docccept[1]{\textit{#1}}
\providecommand\doccceptbool{boolean}
\providecommand\doccceptgroup{local~group}
\providecommand\doccceptkvl{keyval~list}
\providecommand\doccceptpath{path}
\providecommand\doccceptpipe{\textbar}
\providecommand\doccceptpre{preamble}
\providecommand\docccepttok{token}
\providecommand\docenvdoc{\env{document}}
\providecommand\docdefaultfor{default~for~}
\providecommand\doceval[1]{\texttt{\char`\{}#1\texttt{\char`\}}}
\providecommand\docfillblank{\begin{minipage}[t]{\linewidth}\end{minipage}}
\providecommand\docissuedo{Do: }
\providecommand\docissuedont{Don't: }
\providecommand\docissuesymp{Symptom: }
\providecommand\doclist[1]{Listing~\autoref{listing:#1}}
\providecommand\docopto[1]{\texttt{[}#1\texttt{]}}
\providecommand\docopte[2]{\texttt{#1}\doceval{#2}}
\providecommand\docoptd[1]{\texttt{\textless}#1\texttt{\textgreater}}
\providecommand\docarg[1]{\texttt{#1}} % fun[param] (macro) vs fun[arg] (eval)
\cs_new:Nn \__ccool_docu:n{\MakeUppercase #1}
\providecommand\docstep[1]{step~\ref{step:#1}}
\providecommand\docsee{See:~}
\providecommand\docccepttl{token~list}
\providecommand\doctip{\noindent\textbf{Tip}:~}
\providecommand\docU[1]{\exp_args:Nx \__ccool_docu:n{#1}}
\providecommand\docvers[2]{v#1.#2}
\providecommand\docwarn{\noindent\textbf{Warning}:~}
\providecommand\pkgparde{kvl$_{1}$}%Adef
\providecommand\pkgparhe{tl$_{2}$}%head
\providecommand\pkgparin{code$_{1}$}%inner
\providecommand\pkgparna{tl$_{1}$}%name
\providecommand\pkgparnad{\docarg{Math}}%name default
\providecommand\pkgparou{code$_{2}$}%outer
\providecommand\pkgpars{\Arg{\pkgparsi}\doccceptpipe\Arg{\pkgparsi}\Arg{\pkgparsii}\doccceptpipe\Arg{\pkgparsi}\Arg{\pkgparsii}\Arg{\pkgparsiii}}%separ
\providecommand\pkgparsi{tl$_{3}$}
\providecommand\pkgparsii{tl$_{4}$}
\providecommand\pkgparsiii{tl$_{5}$}
\providecommand\pkgparta{tl$_{6}$}%tail
\providecommand\pkgkey{key$_{i}$}
\providecommand\pkgval{val$_{i}$}
\providecommand\pkgoptex{\docarg{Expans}}
\providecommand\pkgoptfi{\docarg{File}}
\providecommand\pkgoptin{\docarg{Inner}}
\providecommand\pkgoptna{\docarg{Name}}
\providecommand\pkgoptou{\docarg{Outer}}
\providecommand\pkgoptwr{\docarg{Write}}
\providecommand\pkgoptse{\docarg{Separ}}
\providecommand\pkgobj[1]{object identified by #1}
\providecommand\pkgoptions{kvl0}
\providecommand\pkgsep[1]{\Arg{#1}}
\providecommand\pkgwrite{\cs{Ccool}\docarg{\meta{\pkgparna}}\docopte{i}{\meta{\pkgparin}}\Arg{\pkgparde}}
\ExplSyntaxOff
\begin{document}
\DocInput{\jobname.dtx}
\end{document}
%</driver> 
% \fi
% 
% \GetFileInfo{\jobname.sty}
% 
% \title{^^A
% \pkg{ccool}, a package for encoding mathematical notation\thanks{^^A
% This file describes version \fileversion, last revised \filedate.^^A
% }^^A
% }
%   \author{Erwann Rogard\thanks{firstname dot lastname AusTria gmail dot com}}
%   
%   \date{Released \filedate}
%   
%   \maketitle
%
%   \begin{abstract}\pkg{ccool}~is a package for \LaTeX, for encoding mathematical definitions in macros that
%     retain the meaning thereof (\cs{R} rather than |$\mathbb{R}$|), the idea behind \pkg{cool}\cite{cool}. However, here,
%    it is entirely up to the user to define these macros, hence the prefix `c'\textins{ustom}.
%   This is done using a minimalist interface built upon \pkg{xparse}\cite{xparse}. 
%     Specifically, \cs{Ccool}\docoptd{\meta{object}} begins a series of instructions
%     alternating between `text' and definitions, that themselves optionally expand using predefined or inline rules.
%     For example,\begin{Verbatim}[breaklines=true]
%       \Ccool<Math>[Let~]{Space=\Omega}*[~denote the sample space]{}
%     \end{Verbatim}
%          expands to: ``\Ccool<Math>[Let~]{Space=\Omega}*[~denote the sample space]{}''.
%          As a side effect, |$\Space<Math>$| encodes``$\Space<Math>$''. \pkgparnad~being the default for \meta{object}, it can be dropped. 
%     Optionally, the definitions can be written to a file, and restored, which
%     can be useful for typesetting documents sharing the same notational conventions.
%   \end{abstract}
%   
%   \tableofcontents 
%   
%   \part{Usage}\label{part:usage}
%   \VerbatimFootnotes
% 
% \setcounter{section}{0}
% \label{usage:conv}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}Convention}
%   \section*{Convention}
%   \begin{enumerate}
%   \item Loosely, those of \cite{interface3} and \cite{xparse}, for example as to the meaning of \meta{\docccepttl}. 
%   \item If unspecified, the environment in which a function must be declared is \docenvdoc.
%   \item Where \meta{\pkgparna} is an optional argument, its default is \pkgparnad.
%   \end{enumerate}
%
%   \refstepcounter{section}
%   \label{usage:load} 
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}Loading the package}
%   
%   \begin{function}{\usepackage}
%     \begin{syntax}
%       \cs{usepackage}\doceval{\pkg{ccool}}
%     \end{syntax}
%     \begin{description}
%     \item[Environment] \docccept{\doccceptpre}
%     \item[Requirement] \file{ccool.sty} is in the path of the \LaTeX~engine. See \autoref{part:other}, \autoref{other:support}.
%     \end{description}  
%   \end{function}
%   
%   \refstepcounter{section}
%   \label{usage:cs:ccool}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}\cs{Ccool}}
%   \setcounter{subsection}{0}
%   \begin{function}{\Ccool}
%     \begin{syntax}
%       \cs{Ccool}\docoptd{\meta{\pkgparna}}
%       \docopto{\meta{\pkgparhe}}
%       \docopte{i}{\meta{\pkgparin}}
%       \Arg{\pkgparde}
%       |+|
%       |*|
%       \docopte{s}{\pkgpars}
%       \docopte{o}{\meta{\pkgparou}}
%       \docopto{\meta{\pkgparta}}
%     \end{syntax}
%     \begin{description}
%     \item[Requirement] \meta{\pkgparde} is specified (all others optional).
%     \end{description}
%   \end{function}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:na}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\docoptd{\meta{\pkgparna}}}
%   \DescribeOption{\meta{\pkgparna}}
%   
%   \begin{description}
%   \item[Example] \pkgparnad, |ModelA|, |ModelB|
%   \item[Semantics] Registers a new object, if applicable
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:he}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\docopto{\meta{\pkgparhe}}}
%   \DescribeOption{\meta{\pkgparhe}}
%   
%   \begin{description}
%   \item[Example]|Let~|
%   \item[Semantics] Expands~\meta{\pkgparhe}
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:in}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\docopte{i}{\meta{\pkgparin}}}
%   \DescribeOption{\meta{\pkgparin}}
%   
%   \begin{description}
%   \item[Example] |\mathbb{#1}|
%   \item[Semantics]
%     \begin{enumerate}
%     \item \docassign{\meta{\pkgval} }
%       { \meta{\pkgparin} applied to \meta{\pkgval} }\label{step:val}
%     \end{enumerate}
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:de}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\Arg{\pkgparde}}
%   \DescribeOption{\meta{\pkgparde}}
%   \begin{description}
%   \item[Example] |Elems={\omega_1, \dots, \omega_n}, Sample=\Omega|
%   \item[Semantics]
%     \begin{enumerate}
%       \setcounter{enumi}{1}
%     \item \docassign{ \cs{\meta{\pkgkey}}\docoptd{\meta{\pkgparna}}}{\meta{val_i}} defined in \docstep{val},
%    using \autoref{usage:opt:ex} for expansion. \label{step:key}
%     \item If \pkgoptwr$=$\cs{BooleanTrue}, writes the definitions made in \docstep{key} to file \file{ccool}\meta{digits}\file{.tex},
%       where \meta{digits}=|\pdfcreationdate|\label{step:write}
%     \end{enumerate}
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:appto}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}+}
%   \DescribeOption{+}
%   \begin{description}
%   \item[Other] Needed to make \cs{Ccool}'side effect within a \docccept{\doccceptgroup}~persist thereafter
%   \item[Semantics] Appends \docstep{key} and \docstep{write} to \cs{CcoolHook}
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:expand}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}*}
%   \DescribeOption{*}
%   
%   \begin{description}
%   \item[Semantics]
%     \begin{enumerate}
%       \setcounter{enumi}{4}
%     \item Expands~\meta{\pkgparou} applied to the list created in \docstep{val},
%       using the separator specified by \autoref{usage:par:si}, \autoref{usage:par:sii}, \autoref{usage:par:siii}.
%     \end{enumerate}
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:s}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\docopte{s}{\pkgpars}}
%   
%   \refstepcounter{subsubsection}
%   \label{usage:par:si}
%   \DescribeOption{\meta{\pkgparsi}}
%   
%   \begin{description}
%   \item[Example] |{~\in~}|
%   \end{description}
%   
%   \refstepcounter{subsubsection}
%   \label{usage:par:sii}
%   \DescribeOption{\meta{\pkgparsii}}
%   
%   \begin{description}
%   \item[Example] |{,~}|
%   \end{description}
%
%   \refstepcounter{subsubsection}
%   \label{usage:par:siii}
%   \DescribeOption{\meta{\pkgparsiii}}
%   
%   \begin{description}
%   \item[Example] |{~\&~}|
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:ou}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\docopte{o}{\meta{\pkgparou}}}
%   \DescribeOption{\meta{\pkgparou}}
%   
%   \begin{description}
%   \item[Example] |$\left\{#1\right\}$| 
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:par:ta}
%   \phantomsection\addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\docopto{\meta{\pkgparta}}}
%   \DescribeOption{\meta{\pkgparta}}
%   \begin{description}
%   \item[Semantics]
%     \cs{Ccool}\docoptd{\meta{\pkgparna}}\docopto{\meta{\pkgparta}}
%   \end{description}
%   
%   \refstepcounter{section}
%   \label{usage:cs:clear}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}\cs{CcoolClear}}
%   \begin{function}{\CcoolClear}
%     \begin{syntax}
%       \cs{CcoolClear}\docoptd{\meta{\doccceptkvl}}
%     \end{syntax}
%     \begin{description}
%     \item[Semantics] Clears any data created by \cs{Ccool}\Arg{\pkgparna}, for all \meta{\pkgparna} in \meta{\doccceptkvl}
%     \end{description}
%   \end{function}
%   
%   \refstepcounter{section}
%   \label{usage:cs:debug}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}\cs{CcoolDebug}}
%   \begin{function}{\CcoolDebug}
%     \begin{description}
%     \item[Semantics] See \autoref{part:impl}
%     \end{description}
%   \end{function}
%
%   \refstepcounter{section}
%   \label{usage:cs:hook}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}\cs{CcoolHook}}
%   \begin{function}{\CcoolHook}
%     \begin{syntax}
%       \cs{CcoolHook}
%     \end{syntax}
%     \begin{description}
%     \item[Example] |\AfterEndEnvironment{theorem}{\CcoolHook}|
%     \item[Tip] Add as many hooks after the \doccceptgroup~as there are calls to \Arg{\pkgparde}|+| within
%     \end{description}
%   \end{function}
%   
%   \refstepcounter{section}
%   \label{usage:cs:option}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}\cs{CcoolOption}}
%   \begin{function}{\CcoolOption}
%     \begin{syntax}
%       \cs{CcoolOption}\Arg{\pkgoptions}
%     \end{syntax} 
%     \begin{description}
%     \item[Semantics] Set default options for \autoref{usage:cs:ccool}
%     \end{description}  
%   \end{function}
%   
%   \refstepcounter{subsection}
%   \label{usage:opt:ex}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptex}
%   \DescribeOption{\pkgoptex}
%   \begin{description}
%   \item[Default] |xo|
%   \item[Syntax] Either of |eo, ee, ex, xe, xo, xe, xx|
%   \end{description} 
%   
%   \refstepcounter{subsection}
%   \label{usage:opt:ex}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptfi}
%   \DescribeOption{\pkgoptfi}
%   \begin{description}
%   \item[Syntax] \docccept{\docU{\docccepttok}}
%   \end{description} 
%
%   \refstepcounter{subsection}
%   \label{usage:opt:in}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptin}
%   \DescribeOption{\pkgoptin}
%   \begin{description}
%   \item[Semantics] \docU{\docdefaultfor}\autoref{usage:par:in}
%   \item[Syntax] Use |####1| as the argument to be replaced
%   \end{description} 
%   
%   \refstepcounter{subsection}
%   \label{usage:opt:na}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptna}
%   \DescribeOption{\pkgoptna}
%   \begin{description}
%   \item[Semantics] \docU{\docdefaultfor}\autoref{usage:par:na}
%   \end{description} 
%   
%   \refstepcounter{subsection}
%   \label{usage:opt:ou}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptou}
%   \DescribeOption{Outer}
%   \begin{description}
%   \item[Semantics] \docU{\docdefaultfor}\autoref{usage:par:ou}
%   \item[Syntax] Use |####1| as the argument to be replaced
%   \end{description}
%   
%   \refstepcounter{subsection}
%   \label{usage:opt:se}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptse}
%   \DescribeOption{\pkgoptse}
%   \begin{description}
%   \item[Semantics] \docU{\docdefaultfor}\autoref{usage:par:s}
%   \item[Syntax] That of `separators' in \cite[Section 8 of \pkg{l3seq}]{interface3}
%   \end{description}
%   
%   \addtocounter{subsection}{1}
%   \label{usage:opt:wr}
%   \addcontentsline{toc}{subsection}{\protect\numberline{\thesubsection}\pkgoptwr}
%   \DescribeOption{\pkgoptwr}
%   \begin{description}
%   \item[Syntax] \docccept{\docU{\doccceptbool}}
%   \end{description}
%   
%   \refstepcounter{section}
%   \label{usage:cs:read}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}\cs{CcoolRead}}
%   \begin{function}{\CcoolRead}
%     \begin{syntax}
%       \cs{CcoolRead}\docopto{\meta{\doccceptpath}}
%     \end{syntax} 
%     \begin{description}
%     \item[Other] The default for \meta{\doccceptpath} is the last write-file (see \meta{\pkgparde})
%     \item[Semantics] \begin{enumerate}
%       \item Reads the definitions in \meta{\doccceptpath}.
%       \item Writes to \file{ccool.log}: `read from \meta{\doccceptpath}'
%       \end{enumerate}
%     \end{description}  
%   \end{function}
%   
%   \refstepcounter{section}
%   \label{usage:dosdont}
%   \addcontentsline{toc}{section}{\protect\numberline{\thesection}Do's and dont's}
%   \section*{Do's and dont's}
%   
%   \begin{enumerate}
%   \item \docfillblank
%     \begin{itemize}
%     \item[\docissuedont] |\Ccool{ A = a, B = b }[Hello, world!]|.
%     \item[\docissuedo] |\Ccool{ A = a, B = b }[Hello, world!]{}|, or \\|\Ccool{ A = a, B = b } Hello, world!|
%     \end{itemize}
%   \item \docfillblank
%     \begin{itemize}
%     \item[\docissuedont] |$|\cs{\meta{\pkgkey}}|<x$|.
%     \item[\docissuedo] |$|\cs{\meta{\pkgkey}}|{<}x$|
%     \end{itemize}
%   \item\docfillblank
%     \begin{itemize}
%     \item[\docissuedont] \cs{Ccool}\docopto{[a, b)}.
%     \item[\docissuedo] \cs{Ccool}|{{[}a, b{)}}|\end{itemize}
%   \item \docfillblank
%     \begin{itemize}
%     \item[\docissuedont] |\Ccool{ F = \cal F }|.
%     \item[\docissuedo] |\Ccool{ F = \cal{F} }| or |\Ccool{ F = \mathcal{F} }|
%     \end{itemize}
%   \item Also see \autoref{part:other}, \autoref{other:issue}
%   \end{enumerate}
%   
%   \clearpage
%   \part{Listing}\label{part:listing}
%   
%   \newtcblisting[auto counter]
%   {listing}[2][]{
%   noparskip,
%   breakable,
%   colback=white,
%   colframe=black,
%   opacitybacktitle=.8,%
%   fonttitle=\bfseries,
%   title=Listing~\thetcbcounter. #1,
%   arc=0pt,
%   outer arc=0pt,
%   boxrule=1pt,
%   listing and text,
%   ^^Atext only, ^^A% only for bech.tex
%   #2
% }
% ^^A  \pagestyle{empty} ^^A% only for bench.tex
%   
%   \doclist{pre} is what might be needed to replicate the code within subsequent listings.
%   Check the documentation portion of the source file, |ccool.dtx|, for exhaustive settings.
%   ^^A   \begin{listing}[]
%     ^^A     {label=listing:debug}
%     ^^A     \newtheorem{definition}{Definition}
%     ^^A     \AfterEndEnvironment{definition}{\CcoolHook}
%     ^^A     \begin{definition}
%       ^^A       \Ccool<Test>
%       ^^A       i{#1{.}}
%       ^^A       { KeyA = {a}, KeyB = {b}, KeyC = {c} }* $\diamond$
%       ^^A     \end{definition}
%     ^^A     \KeyA<Test>\KeyB<Test>\KeyC<Test>
%     ^^A   \end{listing}

%   \phantomsection\addcontentsline{toc}{section}{\doclist{pre}.}
%   \begin{listing}[]
%     {label=listing:pre, listing only}
%     \usepackage{amsmath, amsthm, commath}
%     \usepackage[T1]{fontenc}% \char`[
%   \end{listing}
%
%   \phantomsection\addcontentsline{toc}{section}{\doclist{test:i}.}
%   \begin{listing}[]
%     {label=listing:test:i}
%     \CcoolOption{
%     ^^A% spaces betw. inner and outer brackets matter!->
%     Separ={{\ \char`@\ }{\ \%\ }{\ \char`@\ }}}
%     \Ccool<Test>{ X = x, Y = y }*[\\]
%     { X = x, Y = y, Z = z }*[\\]
%     { X = x, Y = y }*s{{\ \&\ }}[\\]
%     { X = x, Y = y }*s{{\ \&\ }{,\ }}[\\]
%     { X = x, Y = y, Z = z }*s{{\ \&\ }}[\\]
%     { X = x, Y = y, Z = z }*s{{\ \&\ }{,\ }}[\\]
%     { X = x, Y = y, Z = z }*s{{\ \&\ }{,\ }{\ \&\ }}\\
%   \end{listing}
%
%   \phantomsection\addcontentsline{toc}{section}{\doclist{test:ii}.}
%   \begin{listing}[]
%     {label=listing:test:ii}
%     \CcoolOption{ Separ = {{}{.}{.}}, Outer = {####1} }
%     \CcoolOption{ Write = \BooleanTrue }
%     \Ccool<Test>
%     { KeyA = {.}, KeyB = {!}, KeyC = {\%} }[]
%     { KeyD = {d}, KeyE = {\%} }[]i{\{#1\}}
%     { KeyF = {H}, KeyG = {e}, KeyH = {l} }*[]
%     { KeyI = {\%}, KeyJ = {\%}, KeyK = {\%} }[.\{l\}.\{o\}] 
%     { KeyL = {l}, KeyM = {\char`[}, KeyN = {\char`]} }[] 
%     { KeyO = {o}, KeyP = {\%}, KeyQ = {\%} }[{,\ }]
%     { KeyR = {w}, KeyS = {o}, KeyT = {r} }*s{{}{}{}}o{{\char`[}#1}[] 
%     { KeyU = {\%}, KeyV = {\%}, KeyW = {\%} }[] 
%     { KeyX = {\%}, KeyY = {\%}, KeyZ = {\KeyB<Test>} }\nobreak
%     \KeyL<Test>\KeyD<Test>\KeyZ<Test>\KeyN<Test>\\
%     \CcoolOption{ Write = \BooleanFalse }
%   \end{listing}
%   
%   \phantomsection\addcontentsline{toc}{section}{\doclist{test:iii}.}
%   \begin{listing}[]
%     {label=listing:test:iii}
%     \CcoolRead
%     \KeyF<Test>\KeyA<Test>\nobreak
%     \KeyG<Test>\KeyA<Test>\nobreak
%     \KeyH<Test>\KeyA<Test>\nobreak
%     \KeyH<Test>\KeyA<Test>\nobreak
%     {\{}\nobreak\KeyO<Test>{\}},{\ }\nobreak
%     \KeyM<Test>\KeyR<Test>\nobreak
%     \KeyO<Test>\nobreak
%     \KeyT<Test>\nobreak
%     \KeyL<Test>\nobreak
%     \KeyD<Test>\nobreak
%     \KeyZ<Test>\nobreak
%     \KeyN<Test>\nobreak
%   \end{listing}
%   
%   \phantomsection\addcontentsline{toc}{section}{\doclist{proba:i}.}
%   \begin{listing}[]
%     {label=listing:proba:i}
%     \Ccool[We call~]{Elems={{\omega_{1}}, {\dots}, {\omega_{n}}}}*
%     [~the elementary events, and ]{Space=\Omega}
%     [\begin{equation*}\Space=(\Elems)\end{equation*}~the sample space.]
%     {}
%   \end{listing}
%   
%   \begin{listing}[]
%     {label=listing:proba:ii}
%     \CcoolOption{ Write = \BooleanTrue }
%     \Ccool[Let~]
%     {Space=\Omega, Field=\mathcal{F}, Meas=\mathcal{P}}
%     *s{{,}}o{$\{#1\}$}
%     [~denote the probability space, where $\Field\subset 2^{\Space}$.]
%     {}
%     \CcoolOption{ Write = \BooleanFalse }
%   \end{listing}
% 
%    \phantomsection\addcontentsline{toc}{section}{\doclist{proba:iii}.}
%    \begin{listing}[]
%        {label=listing:proba:iii}
%           \CcoolRead \tab $\Omega$ $\Field$ $\Meas$
%      \end{listing}
%^^A^^A      
%^^A^^A     ^^A%{OffeneMenge={D}, Ci={C^{1}}, Strecke={[x_0,x]}} ^^A% Hook 2.a
%^^A^^A     ^^A%Strecke={\char`[x_0,x\char`]}  % PASS % Hook 2.b
%^^A^^A     ^^A%Strecke={\[x_0,x\]}            % FAIL % Hook 2.c
%     \phantomsection\addcontentsline{toc}{section}{\doclist{mvt:i}.}
%     \begin{listing}[]{label=listing:mvt:i}
%       \CcoolOption{ Write = \BooleanTrue }
%       \newtheorem{theorem}{Theorem}
%       \AfterEndEnvironment{theorem}{\CcoolHook}
%       \Ccool i{\mathbb{#1}}
%       { N = { N } , R = { R } }+[]
%       { Grad = { \operatorname{grad} } }+
%       [\begin{theorem}
%         [Mittelwertsatz f\"ur $n$ Variable]Es~sei~]
%         { OffMenge = {D}, Ci = {C^{1}}, Strecke = { [x_0,x] } }+
%         [$n\in\N$,~$\OffMenge\subseteq\N^n$ eine offene Menge und $f\in\Ci(\OffMenge,\R)$.
%         Dann gibt es auf jeder Strecke $\Strecke\subset\OffMenge$ einen Punkt $\xi\in\Strecke$,~]
%         { Steig = { \frac{ f(x)-f(x_0) }{ x-x_0 } }, Punkt = { \xi } }+
%         [so dass gilt
%         \begin{equation*}
%           \Steig = \Grad f(\Punkt)^{\top}
%         \end{equation*}
%       \end{theorem}]
%       {}
%       (Check: $\Punkt$)
%       \CcoolOption{ Write = \BooleanFalse }
%     \end{listing}
%   
%     \phantomsection\addcontentsline{toc}{section}{\doclist{mvt:ii}.}
%     \begin{listing}[]
%       {label=listing:mvt:ii}
%       \CcoolRead \tab $\N$ $\R$ $\OffMenge$ $\Ci$ $\Strecke$ 
%     \end{listing}
%^^A   
%^^A   ^^A   \StopEventually{^^A
%^^A   ^^A   \PrintChanges
%^^A   ^^A   \PrintIndex
%^^A   ^^A }
%   \clearpage
%   \part{Other}\label{part:other}
%   
%   \section{Acknowledgment}\label{other:acknowl} 
%   
%   This work has benefited from Q\&A's from the \LaTeX community, see here: \url{https://tex.stackexchange.com/users/112708/erwann?tab=questions}.
%   Specific references are made in \autoref{part:impl}.
%   \doclist{proba:i} and \doclist{proba:ii} are from \cite{shir95}.
%   \doclist{mvt:i} is from \pkg{tcolbox}\cite[17.3]{tcolbox}.
%   
%   \section{Install}\label{other:install}
%   
%   Compiling \file{ccool.dtx} (under Unix, |$tex ccool.dtx|) will generate \file{ccool.sty} and \file{ccool.pdf}
%   
%   \section{Issue}\label{other:issue}
%   
%   \begin{enumerate}
%       \item
%         \begin{description}
%         \item[\docissuedont] |Inner={\{####1\}|
%         \item[\docissuesymp] \cs{CcoolRead} fails
%         \item[\docissuedo] |Inner={\char`{####1\char`}}|
%         \end{description}
%       \end{enumerate}
%       
%       \section{Support}\label{other:support}
%       
%       This package is available from \url{https://www.ctan.org/pkg/ccool} and \url{https://github.com/rogard/ccool}.
%       
%       \section{Testing}\label{other:testing}
%       
%       It's not possible to check the expansion of a certain class of macros against predefined values\cite{534100}. 
%       Instead, one can check that \autoref{part:listing},
%       as generated in \autoref{other:install} on one's own machine,
%       agrees with \file{bench.pdf} available at \url{https://github.com/rogard/ccool},
%       
%       \begin{thebibliography}{1}
%       \bibitem{shir95} A.N. Shiryaev  {\em Probability} Springer, 1995
%       \bibitem{cool} Nick Setzer {\em The \pkg{cool} package}, 2005 \url{https://www.ctan.org/pkg/cool}
%       \bibitem{interface3} The \LaTeX3 Project Team {\em The \LaTeX3 interfaces} 
%         \url{http://ftp.math.purdue.edu/mirrors/ctan.org/macros/latex/contrib/l3kernel/interface3.pdf}
%       \bibitem{xparse} The \LaTeX3 Project Team {\em The \pkg{xparse} package} 
%         \url{http://ftp.math.purdue.edu/mirrors/ctan.org/macros/latex/contrib/l3packages/xparse.pdf}
%         ^^A\bibitem{l3buil} The \LaTeX3 Project Team {\em The \pkg{l3build} package} 
%         ^^A  \url{http://ftp.math.purdue.edu/mirrors/ctan.org/macros/latex/contrib/l3build/l3build.pdf}
%       \bibitem{tcolbox} Thomas F. Sturm {\em The \pkg{tcolorbox} package} 
%         \url{http://www.texdoc.net/texmf-dist/doc/latex/tcolorbox/tcolorbox.pdf}
%       \bibitem{534100} \url{https://tex.stackexchange.com/a/534100/112708}
%       \end{thebibliography}
%       
%       \changes{\docvers{1}{0}}{2020/03/08}{Initial version}
%       \changes{\docvers{1}{1}}{2020/04/04}{Revamped: much of the implementation}
%       \changes{\docvers{1}{1}}{2020/04/04}{Replaced: \Arg{kvl_{2}}~by~\docoptd{kvl_{2}}~given that option type \texttt{G} not recommended\cite{xparse}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Replaced: \cs{CcoolOptions}~by~\cs{CcoolOption}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Replaced: \docarg{GenericObject} by~\docarg{Name}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Replaced: \docarg{Separators}~by~\docarg{Separ}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Added:\cs{CcoolTest}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Added:\cs{CcoolRestore}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Added: \docarg{Save}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Deleted: Listing 1-5 from \docvers{1}{0}}
%       \changes{\docvers{1}{1}}{2020/04/04}{Added: Listing~1., 2., 3., 4., 6., and 9.}
%       \changes{\docvers{1}{1}}{2020/04/04}{Fixed: apparent anomaly in \docvers{1}{0}'s Listing~4, see \doclist{test:i}}
%       \changes{\docvers{1}{2}}{2020/04/06}{Added: optional |*| to \cs{CcoolNew} as instruction to expand \pkgparde}
%       \changes{\docvers{1}{2}}{2020/04/06}{Replaced: \cs{CcoolClear}\Arg{\pkgparna} by \cs{CcoolClear}\docopto{\meta{\doccceptkvl}}}
%       \changes{\docvers{1}{2}}{2020/04/06}{Deleted: \meta{kvl_{2}}~and~\meta{code_{2}}}
%       \changes{\docvers{1}{2}}{2020/04/06}{Deleted: \cs{CcoolTest}}
%       \changes{\docvers{1}{2}}{2020/04/06}{Deleted: Listing~2-3 from \docvers{1}{1}.}
%       \changes{\docvers{1}{2}}{2020/04/06}{Replaced: \cs{Save} by \cs{Write}}
%       \changes{\docvers{1}{2}}{2020/04/06}{Replaced: \cs{Restore} by \cs{Read}}
%       \changes{\docvers{1}{3}}{2020/04/06}{Replaced: \cs{CcoolNew} by \cs{Ccool}}
%       \changes{\docvers{1}{3}}{2020/04/06}{Replaced: \Arg{\pkgparna} and \docopto{\meta{\pkgparna}} by \docoptd{\meta{\pkgparna}} }
%       \changes{\docvers{1}{4}}{2020/04/10}{Replaced: \docopte{s}{\Arg{\pkgparsi}\Arg{\pkgparsii}\Arg{\pkgparsiii}}
%       by \docopte{s}{\Arg{\pkgparsi}\doccceptpipe\Arg{\pkgparsi}\Arg{\pkgparsii}\doccceptpipe\Arg{\pkgparsi}\Arg{\pkgparsii}\Arg{\pkgparsiii}}}
%       \changes{\docvers{1}{4}}{2020/04/10}{Added:optional |+| to \cs{CcoolNew} to make side effects presist beyond local group}
%       \changes{\docvers{1}{4}}{2020/04/10}{Added: \cs{CcoolHook}}
%       \changes{\docvers{1}{4}}{2020/04/10}{Deleted: Listing~1., and 2. }
%       \changes{\docvers{1}{4}}{2020/04/10}{Added: Listing~1., 2., and 3. }
%       \changes{\docvers{1}{4}}{2020/04/10}{Added: \docarg{Expans} (for debugging' sake, but...) }
%       \changes{\docvers{1}{4}}{2020/04/10}{Added: \autoref{usage:dosdont} }
%       \changes{\docvers{1}{4}}{2020/04/10}{Added: \cs{CcoolDebug} }
%       \changes{\docvers{1}{5}}{2020/04/10}{Deleted: dependence on \pkg{datetime} }
%       \changes{\docvers{1}{5}}{2020/04/10}{Added: \pkgoptfi }
%       \changes{\docvers{1}{6}}{2020/04/10}{Renamed \pkg{oops} (reflects implementation) to \pkg{ccool} (reflects purpose)}
%       \changes{\docvers{1}{6}}{2020/04/10}{Added: Listing~1.}
%
%       \clearpage
%       \PrintChanges
%       \PrintIndex
%       \part{Implementation}\label{part:impl}
%       \StopEventually{}
%       \begin{implementation}
%         
%         \iffalse
%<*package>         
%         \fi
%    \begin{macrocode}
%<@@=ccool>      
\NeedsTeXFormat{LaTeX2e}[2019/10/01]
\ExplSyntaxOn
%    \end{macrocode}
% \section{\texttt{aux}}
% \begin{macro}{\@@_aux_inner_set:n}
%   \begin{arguments}
%   \item \meta{code}
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_inner_set:n
{
  \cs_gset:Npn \@@_aux_inner:n ##1 {#1}
  \cs_generate_variant:Nn \@@_aux_inner:n { e }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_key:w }
%   \begin{arguments}
%   \item \meta{ key }
%   \item \meta{ value }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_aux_key:w #1 = #2 \q_stop
{
  \seq_gput_right:Nx \g@@_aux_key_seq { \tl_trim_spaces:n{#1} }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_key:n }
%   \begin{arguments}
%   \item \meta{ key = value }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_key:n
{
  \@@_aux_key:w #1 \q_stop
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_key:N }
%   \begin{arguments}
%   \item \meta{ seq }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_key:N 
{
  \seq_gclear_new:N \g@@_aux_key_seq
  \seq_map_function:NN #1 \@@_aux_key:n
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_outer_set:n}
%   \begin{arguments}
%   \item \meta{ inline code }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_outer_set:n
{
  \cs_gset:Npn \@@_aux_outer:n ##1 {#1}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_prop:nn}
%    \begin{macrocode}
\prop_new:N \g@@_aux_prop
\cs_new_protected:Nn \@@_aux_prop:nn 
{
  \prop_gput:Nnn \g@@_aux_prop{#1}{#2}
}
\cs_generate_variant:Nn \@@_aux_prop:nn { eo, ee, ex, xo, xe, xx }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_prop:w}
%   \begin{arguments}
%   \item \meta{ key }
%   \item \meta{ value }
%   \end{arguments}
%    \begin{macrocode}
\tl_new:N \g@@_option_expans_tl
\cs_new_protected:Npn \@@_aux_prop:w #1 = #2 \q_stop
{
  \exp_args:Nx
  \use:c{@@_aux_prop:\g@@_option_expans_tl}
  { \tl_trim_spaces:n{#1} }
  { \@@_aux_inner:n{ \tl_trim_spaces:n{#2} } }
%^^A  { \@@_aux_inner:e{ \tl_trim_spaces:n{#2} } }% DEBUG
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_prop:n}
%   \begin{arguments}
%   \item \meta{ key = value }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_prop:n
{
  \@@_aux_prop:w #1 \q_stop 
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_prop:N}
%   \begin{arguments}
%   \item \meta{keyval list}
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_prop:N
{
  \prop_gclear_new:N \g@@_aux_prop
  \seq_if_empty:NTF #1
  { \c_empty_tl }
  {
    \seq_map_function:NN #1 \@@_aux_prop:n
  }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_separ:nn}
%   \begin{arguments}
%   \item \meta{ int }
%   \item \meta{ tokens }
%   \end{arguments}
%    \begin{macrocode}
\cs_new:Nn \@@_aux_separ:nn
{
  \int_case:nnTF {#1}
  {
    {1}
    { \prg_replicate:nn{ 3 }{#2} }
    {2}
    {
      { \use_i:nn #2 }
      { \use_ii:nn #2 }
      { \use_i:nn #2 }
    }
    {3}{#2}
  }
  { \c_empty_tl }
  {
    \msg_error:nnnn { __erw }
    { separ }
    { \exp_not:N \_@@_aux_separ:nn }
    {#2}
  }
}
\cs_generate_variant:Nn \@@_aux_separ:nn { e }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_separ:n}
%   \begin{arguments}
%   \item \meta{ tokens }
%   \end{arguments}
%    \begin{macrocode}
\cs_new:Nn \@@_aux_separ:n
{
  \@@_aux_separ:en{ \tl_count:n{#1} }{#1}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_aux_val:Nn}
%   \begin{arguments}
%   \item \meta{ seq }
%   \item \meta{ tl var name }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_aux_val:Nn
{
  \seq_gclear_new:N \g@@_aux_val_seq
  \@@_seq_from_prop:NNn \g@@_aux_val_seq #1 { \@@_prop_name:n{#2} } 
}
%    \end{macrocode}
% \end{macro}
% \section{\texttt{log}}
% \begin{macro}{\@@_log_close:}
%    \begin{macrocode}
\iow_new:N \g@@_log_iow
\AtEndDocument{\iow_close:N \g@@_log_iow}
\bool_set_false:N \g@@_log_open_bool
\cs_new_protected:Nn \@@_log_close:
{
  \iow_close:N \g@@_log_iow
  \bool_gset_false:N \g@@_log_open_bool
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_log_open:}
%    \begin{macrocode}
\tl_new:N \g@@_log_file_tl
\cs_new_protected:Nn \@@_log_open:
{
  \tl_gset:Nx \g@@_log_to_tl{\g@@_log_file_tl}
  \iow_open:Nn \g@@_log_iow {\g@@_log_to_tl}
  \bool_gset_true:N \g@@_log_open_bool
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_log_read:n}
%   \begin{arguments}
%   \item \meta{path}
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_log_read:n
{
  \file_input:n{#1}
  \tl_log:n{read~from~#1}
}
\cs_generate_variant:Nn \@@_log_read:n { e }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_log_read:}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_log_read:
{
  \@@_log_read:e{\g@@_log_to_tl}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_log_write:n}
%    \begin{macrocode}
\tl_new:N \g@@_log_to_tl
\cs_new_protected:Nn \@@_log_write:n
{
  \bool_if:nTF{ \g@@_log_open_bool }
  {
    \iow_now:Nn \g@@_log_iow {#1}
    \tl_log:n{ write~to~#1 }
  }
  { \msg_error:nnn{ @@ }{ iow }{ \g@@_log_iow }  }
}
\cs_generate_variant:Nn \@@_log_write:n { e }
%    \end{macrocode}
% \end{macro}
% \section{\texttt{make_key}}
% \begin{macro}{\@@_make_key:Nn}
%   \begin{arguments}
%   \item \meta{ token }
%   \item \meta{ key }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_make_key:Nn 
{
  \exp_args:NNx
  \ProvideDocumentCommand{#1} 
  { D<>{\g@@_option_name_tl} }
  {
    \@@_prop_item:nn{##1}{#2}
  }
}
\cs_generate_variant:Nn \@@_make_key:Nn {c}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_make_key:n}
%   \begin{arguments}
%   \item \meta{ key }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_make_key:n
{
  \@@_make_key:cn{#1}{#1}
}
\cs_generate_variant:Nn \@@_make_key:n { e }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_make_key:N}
%   \begin{arguments}
%   \item \meta{ seq }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_make_key:N
{
  \seq_map_function:NN #1 \@@_make_key:e
}
%    \end{macrocode}
% \end{macro}
% \section{\texttt{make_ccool}}
% \begin{macro}{\@@_make_ccool_exp:nnn}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_make_ccool_exp:nnn
{
  \@@_aux_val:Nn \g@@_aux_key_seq {#1}
  \@@_aux_outer_set:n{#3}
  \@@_aux_outer:n
  {
    \exp_args:NNf
    \@@_seq_use:Nn
    \g@@_aux_val_seq
    {#2}
  }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_make_ccool_key:nnn}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_make_ccool_key:nnn
{
  \@@_prop_if_exist:nTF{#1}
  { \c_empty_tl }
  { \@@_prop_new:n{#1} }
  \exp_args:No \@@_aux_inner_set:n{#2}
  \seq_set_from_clist:Nn \g@@_aux_keyval_seq {#3}
  \@@_aux_prop:N \g@@_aux_keyval_seq
  \@@_prop_append:Nn \g@@_aux_prop {#1}
  \@@_aux_key:N \g@@_aux_keyval_seq
  \@@_make_key:N \g@@_aux_key_seq
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_make_ccool_sideeffect:nnn}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_make_ccool_sideeffect:nnn
{
  \@@_make_ccool_key:nnn{#1}{#2}{#3}
  \bool_if:nTF{ \g@@_log_open_bool }
  {%^^A https://tex.stackexchange.com/questions/536597
    \@@_log_write:n
    {
      \begingroup
      \def \@@_log_entry { \Ccool<#1>i{#2}{#3} } \expandafter
      \endgroup \@@_log_entry      
    }
  }{\c_empty_tl}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_make_ccool:nnnn}
%   \begin{arguments}
%   \item \meta{ token list }
%   \item \meta{ seq_{1} }
%   \item \meta{ seq_{2} } 
%   \item \meta{ prop }
%   \end{arguments}
%    \begin{macrocode}
\def\CcoolHook{\c_empty_tl}
\cs_new_protected:Npn \@@_make_ccool:nnnn #1 #2 #3 #4
{ 
  \exp_args:NNx \DeclareDocumentCommand \Ccool
  {%^^A      2    3         4 5  6    7 8              9
    D<>{#1} +o E{ i }{{#2}} m t+ s E{ s o }{{#3}{#4}} +o
  }
  {
    \IfValueT{##2}{##2}    
    \@@_make_ccool_sideeffect:nnn{##1}{##3}{##4}    
    \IfBooleanT{##6}
    {
      \@@_make_ccool_exp:nnn{##1}{##7}{##8}
    }
    \bool_if:nTF{##5}
    {
      \gappto{\CcoolHook}
      {
        \@@_make_ccool_sideeffect:nnn{##1}{##3}{##4}
      }
    }
    {\c_empty_tl}
    \IfValueT{##9}
    {
      \exp_not:n{ \Ccool<##1>[##9] }
    }
  }
}
%    \end{macrocode}
% \end{macro}
% \section{\texttt{msg}}
%    \begin{macrocode}
\msg_new:nnn {@@}{ generic }{#1}
\msg_new:nnn {@@}{ iow }{#1~is~closed~can't~write}
\msg_new:nnn {@@}{ keyonly }{#1~does~not~take~values;~keyval~is~#2}
\msg_new:nnn {@@}{ keywrong }{#1~does~not~recognize~key~#2}
\msg_new:nnn {@@}{ separ }{#1~expects~1~to~3~items,~#2}
\msg_new:nnn {@@}{ unset }{#1~unset}
%    \end{macrocode}
% \section{\texttt{option}}
% \begin{macro}{\@@_aux_inner:n}
%   \begin{arguments}
%   \item \meta{code}
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_option_inner:n
{
  \tl_gset:Nn \g@@_option_inner_tl {#1}
}
\@@_option_inner:n
{
  \msg_warning:nnn{ @@ }{ unset }{ \exp_not:N \g@@_option_inner_tl }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_option_name:n}
%   \begin{arguments}
%   \item \meta{token list}
%   \end{arguments}
%    \begin{macrocode}
\cs_new:Nn \@@_option_name:n
{
  \tl_gset:Nn \g@@_option_name_tl{#1}
}
\@@_option_name:n
{  
  \msg_error:nnx{ @@ }
  { generic }
  { \exp_not:N\g@@_option_name_tl~undefined }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_option_outer:n}
%   \begin{arguments}
%   \item \meta{ inline code }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_option_outer:n
{
  \tl_gset:Nn \g@@_option_outer_tl {#1}
}
\@@_option_outer:n
{
  \msg_warning:nnn{ @@ }{ unset }{ \exp_not:N \g@@_option_outer_tl }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_option_separ:n}
%   \begin{arguments}
%   \item \Arg{ tl_{1} }\Arg{ tl_{2} }\Arg{ tl_{3} }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_option_separ:n
{
  \cs_gset:Npn \g@@_option_separ_tl {#1}
}
\@@_option_separ:n
{
  \msg_warning:nnn{ @@ }{ unset }{ \exp_not:N \g@@_option_separ_tl }
}
%    \end{macrocode}
% \end{macro}
% \section{\texttt{prop}}
% \begin{macro}{\@@_prop_append:NN}
%   \begin{arguments}
%   \item \meta{ prop_{1} }
%   \item \meta{ prop_{2} }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_prop_append:NN #1 #2
{
  \cs_set:Nn \@@_prop_append:nn
  {
    \prop_gput:Nnx #1 {##1}{ \prop_item:Nn #2{##1} }
  }
  \prop_map_function:NN #2 \@@_prop_append:nn
}
\cs_generate_variant:Nn \@@_prop_append:NN { cN }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_append:Nn}
%   \begin{arguments}
%   \item \meta{ prop }
%   \item \meta{ tl var name }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_prop_append:Nn 
{
  \@@_prop_append:cN{ \@@_prop_name:n {#2} } #1
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_clear_new:n}
%   \begin{arguments}
%   \item \meta{ tl var name }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_prop_clear_new:n
{
  \exp_args:No \prop_clear_new:c{ \@@_prop_name:n {#1} }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_clear_new_map:n}
%   \begin{arguments}
%   \item \meta{ keyval list }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_prop_clear_new_map:n
{
  \seq_set_from_clist:Nn \g@@_aux_key_seq {#1}
  \seq_map_function:NN \g@@_aux_key_seq \@@_prop_clear_new:n
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_if_exist:nTF}
%   \begin{arguments}
%   \item \meta{tl_{1}}
%   \item \meta{tl_{2}}
%   \item \meta{tl_{3}}
%   \end{arguments}
%    \begin{macrocode}
\cs_new:Nn \@@_prop_if_exist:nTF 
{
  \prop_if_exist:cTF{ \@@_prop_name:n {#1} }{#2}{#3}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_item:nn}
%   \begin{arguments}
%   \item \meta{ tl var name }
%   \item \meta{ key }
%   \end{arguments}
%    \begin{macrocode}
\cs_new:Nn \@@_prop_item:nn
{
  \prop_item:cn { \@@_prop_name:n {#1} } {#2}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_name:n}
%   \begin{arguments}
%   \item \meta{ tl var name }
%   \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \@@_prop_name:n #1{ @@_#1 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_prop_new:n}
%   \begin{arguments}
%   \item \meta{ tl var name }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_prop_new:n 
{
  \prop_new:c{ \@@_prop_name:n {#1} }
}
%    \end{macrocode}
% \end{macro}
% \section{\texttt{seq}}
% \begin{macro}{\@@_seq_from_prop:NNn}
%   \begin{arguments}
%   \item \meta{ seq_{1} }
%   \item \meta{ seq_{2} } (keys)
%   \item \meta{ prop }
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_seq_from_prop:NNn
{
  \cs_set_protected:Nn \@@_seq_from_prop:n
  {
    \seq_gput_right:No #1 { \prop_item:cn{#3}{##1} }
  }
  \seq_map_function:NN #2 \@@_seq_from_prop:n
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_erw_seq_use:Nn}
%    \begin{macrocode}
%      \begin{arguments}
%      \item \meta{ seq }
%      \item \meta{ tokens }
%      \end{arguments}
\cs_new:Nn \@@_seq_use:Nn
{
  \exp_last_unbraced:NNf
  \seq_use:Nnnn #1
  \@@_aux_separ:n{#2}
}
%    \end{macrocode}
% \end{macro}
% \section{Front-end}\label{impl:frontend}
%    \begin{macrocode}
\keys_define:nn { @@ }
{
  Expans .multichoices:nn =
  { eo, ee, ex, xo, xe, xx }
  { \tl_gset_eq:NN \g@@_option_expans_tl \l_keys_choice_tl },
  Expans .default:n = { xo },
  Expans .initial:n = { xo },  
  File .code:n = { \tl_gset:Nn  \g@@_log_file_tl{ \exp_not:n{ #1 } } },
  File .default:n = { ccool\pdfcreationdate },
  File .initial:n = { ccool\pdfcreationdate },  
  Name .code:n={
    \@@_option_name:n{#1}
    \exp_last_unbraced:Nf 
    \@@_make_ccool:nnnn
    {
      { \g@@_option_name_tl }
      { \g@@_option_inner_tl }
      { \g@@_option_separ_tl }
      { \g@@_option_outer_tl }
    }
  },
  Name .value_required:n = false,
  Name .default:n = { Math },
  Name .initial:n = { Math },
  Inner .code:n={
    \@@_option_inner:n{#1}
    \exp_last_unbraced:Nf 
    \@@_make_ccool:nnnn
    {
      { \g@@_option_name_tl }
      { \g@@_option_inner_tl }
      { \g@@_option_separ_tl }
      { \g@@_option_outer_tl }
    }
  },
  Inner .value_required:n = false,
  Inner .default:n = {####1},
  Inner .initial:n = {####1},
  Outer .code:n={
    \@@_option_outer:n{#1}
    \exp_last_unbraced:Nf 
    \@@_make_ccool:nnnn
    {
      { \g@@_option_name_tl }
      { \g@@_option_inner_tl }
      { \g@@_option_separ_tl }
      { \g@@_option_outer_tl }
    }
  },
  Outer .value_required:n = false,
  Outer .default:n = { \ensuremath{####1} },
  Outer .initial:n = { \ensuremath{####1} },
  Write .code:n = {
    \bool_if:nTF{#1}
    {\@@_log_open:}
    {\@@_log_close:}
  },
  Write .value_required:n = false,
  Write .default:n = \BooleanFalse,
  Write .initial:n = \BooleanFalse,
  Separ .code:n={
    \@@_option_separ:n{#1}
    \exp_last_unbraced:Nf 
    \@@_make_ccool:nnnn
    {
      { \g@@_option_name_tl }
      { \g@@_option_inner_tl }
      { \g@@_option_separ_tl }
      { \g@@_option_outer_tl }
    }
  },
  Separ .value_required:n = false,
  Separ .default:n = { {\ }and{\ } } { ,{\ } } { ,{\ }and{\ } },
  Separ .initial:n = { {\ }and{\ } } { ,{\ } } { ,{\ }and{\ } }
}
%    \end{macrocode}
% \begin{macro}{\CcoolClear}
%   \begin{arguments}
%   \item \meta{ tl var name }
%   \end{arguments}
%    \begin{macrocode}
\NewDocumentCommand{ \CcoolClear }
{ D<>{\g@@_option_name_tl} }
{ 
  \@@_prop_clear_new_map:n{#1} 
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\CcoolDebug}
%    \begin{macrocode}
\NewDocumentCommand\CcoolDebug{m}
{
  \@@_prop_if_exist:nTF{#1}
  { \c_empty_tl }
  { \@@_prop_new:n{#1} }
  \@@_make_key:Nn \KeyA{KeyA}
  \gappto{\CcoolHook}
  {
    \@@_prop_if_exist:nTF{#1}
    { \c_empty_tl }
    { \@@_prop_new:n{#1} }
    \@@_make_key:Nn \KeyA{KeyA}
  }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\CcoolOption}
%    \begin{macrocode}
\NewDocumentCommand{ \CcoolOption }
{ m }
{ 
  \keys_set:nn{ @@ }{#1} 
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\CcoolRead}
%    \begin{macrocode}
\NewDocumentCommand{\CcoolRead}
{o}
{
  \IfValueTF{#1}
  {\@@_log_read:e{#1}}
  {\@@_log_read:}
}
%    \end{macrocode}
% \end{macro}
% \section{Misc}
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
% \end{implementation}
% 
% \iffalse
%</package> 
% \fi
% \Finale
\endinput